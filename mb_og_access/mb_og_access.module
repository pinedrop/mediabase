<?php

/**
* @file
* Enable access control for private and public groups and group content.
*/

/**
* The access realm of a UVa community member.
*/
define('OG_ACCESS_UVA_MEMBER_REALM', 'group_access_uva_member');

/**
* Define group access UVA regardless of its group definition.
*/
define('OG_ACCESS_UVA', 2);

/**
* Define group content access UVA regardless of its group definition.
*/
define('OG_CONTENT_ACCESS_UVA', 3);

/**
* Implements hook_node_grants().
*/
function mb_og_access_node_grants($account, $op) {
   $grants = array();
   global $user;
   if ($op == 'view' && in_array('authenticated user', $user->roles)) {
      // If you're an authenticated user of mediabase, we say you're a community member
      $grants[OG_ACCESS_UVA_MEMBER_REALM][] = DRUPAL_AUTHENTICATED_RID;
   }
   return $grants;
}


/**
* Implements hook_node_access_records().
*/
function mb_og_access_node_access_records($node) {
   
   $grants = array();
   
   // The group IDs, that in case access is granted, will be recorded.
   $gids = array();
   
   $access = FALSE;
   if ( isset($node->{OG_ACCESS_FIELD}) && OG_ACCESS_UVA == $node->{OG_ACCESS_FIELD}[LANGUAGE_NONE][0]['value'])  {
      // Group or group content that is explicitly set to be unpublic.
      $access = TRUE;
      $gids[] = DRUPAL_AUTHENTICATED_RID;
      //dpm( "adding a group for uva community");
   }
   elseif (isset($node->{OG_CONTENT_ACCESS_FIELD}[LANGUAGE_NONE][0]['value'])) {
      switch ($node->{OG_CONTENT_ACCESS_FIELD}[LANGUAGE_NONE][0]['value']) {
      case OG_CONTENT_ACCESS_DEFAULT:
         break; // Do nothing.
      case OG_CONTENT_ACCESS_PUBLIC:
         break; // Do nothing.
      case OG_CONTENT_ACCESS_PRIVATE:
         break; // Do nothing.
      case OG_CONTENT_ACCESS_UVA:
         $access = TRUE;
         $gids[] = DRUPAL_AUTHENTICATED_RID;
         //dpm( "adding a content item for uva community");
         break;
      }
   }
   
   //TODO: Add a case where the group has access field but group content doesn't.
   if ($access && $gids) {
      //dpm( "MEDIABASE MB_OG_ACCESS IS ADDING GRANTS");
      foreach ($gids as $gid) {
         $grants[] = array (
            'realm' => OG_ACCESS_UVA_MEMBER_REALM,
            'gid' => DRUPAL_AUTHENTICATED_RID,
            'grant_view' => 1,
            'grant_update' => 0,
            'grant_delete' => 0,
            'priority' => 0,
            );
      }
   }
   //dpm($grants, "grants from mb-og-access");
   return $grants;
}


function modify_group_content_access_field( $uninstall=FALSE) {
   $sql = "SELECT data from {field_config} WHERE field_name = 'group_content_access'";
   $res = db_query($sql);
   $orig_data = $data = unserialize($res->fetchColumn());
   
   if ( sizeof($data['settings']['allowed_values']) == 3 && !$uninstall) {
      $data['settings']['allowed_values'][] = 'UVa - accessible only to the UVa community';
   } else if (sizeof($data['settings']['allowed_values']) == 4 && $uninstall) {
      unset($data['settings']['allowed_values'][2]); 
   }
   
   if ( sizeof($orig_data['settings']['allowed_values']) != sizeof($data['settings']['allowed_values'])) {
      $num_updated = db_update('field_config') // Table name no longer needs {}
      ->fields(array(
         'type' => 'list_integer',
         'data' => serialize($data),
         ))
      ->condition('field_name', 'group_content_access', '=')
      ->execute();
      echo "Updated group_content_access field_config: $num_updated", PHP_EOL;
   } else {
      echo "No updates needed for group_content_access field_config", PHP_EOL;
   }
}


