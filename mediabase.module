<?php

/**
* This module provides general customizations for the Mediabase Drupal application
*/

/* function mediabase_init() {
} */

function mediabase_menu() {
   $items = array();
   $items['admin/config/media/mediabase'] = array(
   'title' => 'Mediabase Settings',
   'description' => 'Settings for Mediabase',
   'page callback' => 'drupal_get_form',
   'page arguments' => array('mediabase_settings_form'),
   'access arguments' => array('administer mediabase'),
   'type' => MENU_NORMAL_ITEM,
   );
   
   $items['browse/media'] = array(
   'title' => 'Browse Mediabase Content',
   'description' => 'Settings for Mediabase',
   'file' => 'includes/mediabase.browse.inc',
   'page callback' => 'browse_media',
   'type' => MENU_NORMAL_ITEM,
   );
   return $items;
}

function mediabase_perm() {
   return array(
      'administer mediabase',
      );
}

function mediabase_settings_form($form_id, $form_state) {
   $form['partner_data'] = array(
      '#type' => 'textarea',
      '#title' => t('Partner data prefix patterns'),
      '#description' => t('A list of pipe-delimited values (prefix | label | delimiter). Prefix is the prefix used in a Kaltura Batch Upload CSV in the partner data field, e.g. thl-3918.'),
      '#default_value'=> variable_get('mediabase_partner_data_prefixes'),
      '#rows' => 10,
      );
   $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Save settings'),
      );
   return $form;
}

function mediabase_settings_form_submit($form, &$form_state) {
   // partner data prefixes are a way of managing imports from kaltura
   variable_set('mediabase_partner_data_prefixes', $form_state['values']['partner_data']);
   drupal_set_message(t('The settings have been saved'));
}

function mediabase_form_alter(&$form, &$form_state, $form_id) {
   if (in_array($form_id, array('search_block_form', 'apachesolr_search_custom_page_search_form'))) {
      drupal_add_js(drupal_get_path('module', 'mediabase') .'/js/mediabase.js', array('preprocess' => FALSE));
   }  
   if ($form['#node_edit_form']) {
      $form['actions']['Cancel'] = array(
         '#access' => 'TRUE',
         '#type' => 'submit',
         '#value' => 'Cancel',
         '#weight' => '14',
         '#submit' => array('mediabase_node_form_cancel'),
         );
   }
}

function mediabase_node_form_cancel(&$form, &$form_state) {
   $node = $form['#node'];
   $alias = drupal_lookup_path('alias', "node/$node->nid");
   drupal_goto($alias);
}


