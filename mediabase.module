<?php

/**
* This module provides general customizations for the Mediabase Drupal application
*/

function mediabase_init() {
   $path = drupal_get_path('module', 'mediabase');
   drupal_add_js( array( 
        'mediabase' => array( 
          'path' => $path,
          'kmapServer' => variable_get('kmap_server', 'http://subjects.kmaps.virginia.edu') . '/',
          'placeServer' => variable_get('place_server', 'http://places.kmaps.virginia.edu') . '/',
        )), 'setting' );  
}

function mediabase_permission() {
  return array(
    'administer mediabase' => array(
      'title' => t('Administer Mediabase'), 
      'description' => t('Perform administration tasks for mediabase.'),
    ),
  );   
}

function mediabase_menu() {
   $items = array();
   
   $items['admin/config/media/mediabase'] = array(
   'title' => 'Mediabase Settings',
   'description' => 'Settings for Mediabase',
   'page callback' => 'drupal_get_form',
   'page arguments' => array('mediabase_settings_form'),
   'access arguments' => array('administer mediabase'),
   'type' => MENU_NORMAL_ITEM,
   );
   
   $items['browse/media'] = array(
   'title' => 'Browse Mediabase Content',
   'description' => 'Settings for Mediabase',
   'file' => 'includes/mediabase.browse.inc',
   'page callback' => 'browse_media',
   'type' => MENU_NORMAL_ITEM,
   );
   
   $items['persistent/%'] = array(
    'title' => '',
    'description' => 'Redirects a NID to its titled url',
    'page callback' => 'mediabase_persistent_nid',
    'page arguments' => array(1),
    'access callback' => 'node_access',
    'access arguments' => array('view', 1),
    'type' => MENU_NORMAL_ITEM,
   );
   
   return $items;
}

function mediabase_settings_form($form_id, $form_state) {
   $form['partner_data'] = array(
      '#type' => 'textarea',
      '#title' => t('Partner data prefix patterns'),
      '#description' => t('A list of pipe-delimited values (prefix | label | delimiter). Prefix is the prefix used in a Kaltura Batch Upload CSV in the partner data field, e.g. thl-3918.'),
      '#default_value'=> variable_get('mediabase_partner_data_prefixes'),
      '#rows' => 10,
   );
   
   if(user_access('administer knowledge maps')) {
     $form['kmap_server'] = array(
        '#title' => t('Kmap Server'),
        '#type' => 'textfield', 
        '#default_value' => variable_get('kmap_server', 'http://subjects.kmaps.virginia.edu'),
        '#size' => 60, 
        '#maxlength' => 255, 
        '#required' => TRUE,
     );
     $form['place_server'] = array(
        '#title' => t('Places Server'),
        '#type' => 'textfield', 
        '#default_value' => variable_get('place_server', 'http://places.kmaps.virginia.edu'),
        '#size' => 60, 
        '#maxlength' => 255, 
        '#required' => TRUE,
     );
   }
   
   return system_settings_form($form);
}

function mediabase_settings_form_validate($form, &$form_state) {
  if(substr($form_state['values']['kmap_server'], -1) == "/") {
    $form_state['values']['kmap_server'] = substr( $form_state['values']['kmap_server'], 0, strlen($form_state['values']['kmap_server']) - 1);
  }
  if(substr($form_state['values']['place_server'], -1) == "/") {
    $form_state['values']['place_server'] = substr( $form_state['values']['place_server'], 0, strlen($form_state['values']['place_server']) - 1);
  }
}

function mediabase_settings_form_submit($form, &$form_state) {
   // partner data prefixes are a way of managing imports from kaltura
   variable_set('mediabase_partner_data_prefixes', $form_state['values']['partner_data']);
   drupal_set_message(t('The settings have been saved'));
}

function mediabase_form_alter(&$form, &$form_state, $form_id) {
   if (in_array($form_id, array('search_block_form', 'apachesolr_search_custom_page_search_form'))) {
      drupal_add_js(drupal_get_path('module', 'mediabase') .'/js/mediabase.js', array('preprocess' => FALSE));
   }  
   if ( isset($form['#node_edit_form']) && $form['#node_edit_form']) {
      $form['actions']['Cancel'] = array(
         '#access' => 'TRUE',
         '#type' => 'submit',
         '#value' => 'Cancel',
         '#weight' => '14',
         '#submit' => array('mediabase_node_form_cancel'),
         );
   }
}

function mediabase_node_form_cancel(&$form, &$form_state) {
   $node = $form['#node'];
   $alias = drupal_lookup_path('alias', "node/$node->nid");
   drupal_goto($alias);
}

function mediabase_persistent_nid($nid) {
   $alias = drupal_lookup_path('alias', "node/$nid");
   drupal_goto($alias);
}
